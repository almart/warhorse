terraform {
  required_version = ">= 1.0.0"
  required_providers {
    {% if (warhorse.providers | default({})).get('digitalocean') %}
    digitalocean = {
      source = "digitalocean/digitalocean"
      version = "~> 2.0"
    }
    {% endif %}

    {% if (warhorse.providers | default({})).get('cloudflare') %}
    cloudflare = {
      source  = "cloudflare/cloudflare"
      version = "~> 3.0"
    }
    {% endif %}

    {% if (warhorse.providers | default({})).get('linode') %}
    linode = {
      source = "linode/linode"
    }
    {% endif %}

    javascript = {
      source  = "apparentlymart/javascript"
      version = "0.0.1"
    }

    local = {
      source  = "hashicorp/local"
      version = ">= 1.2"
    }
  }

  {# Backend configuration for state management using an S3 backend (compatible with DigitalOcean Spaces) #}
  {% if (warhorse.terraform | default({})).get('state_bucket_enabled') %}
  backend "s3" {
    bucket = "{{ warhorse.terraform.state_bucket_name }}"
    key    = "{{ warhorse.terraform.state_bucket_key }}"
    region = "{{ warhorse.terraform.state_bucket_region }}"
    # Use DO Spaces credentials for S3 backend
    access_key = "{{ warhorse.terraform.bucket_access_key }}"
    secret_key = "{{ warhorse.terraform.bucket_secret_key }}"
    endpoints = {
      s3 = "{{ warhorse.terraform.state_bucket_endpoint }}"
    }
    skip_credentials_validation = true
    skip_metadata_api_check = true
    use_path_style = true
    skip_requesting_account_id = true
  }
  {% endif %}

  {% if (warhorse.terraform | default({})).get('cloud_enabled') %}
  cloud {
    organization = "{{ (warhorse.terraform | default({})).get('cloud_organization', '') }}"
    workspaces {
      name = "{{ (warhorse.terraform | default({})).get('cloud_workspace', '') }}"
    }
  }
  {% endif %}
}

{# Provider blocks for individual services #}
{% if (warhorse.providers | default({})).get('digitalocean') %}
provider "digitalocean" {
  token = var.do_token
  
  # Spaces credentials need to be configured separately from the main token
  spaces_access_key_id  = "{{ warhorse.terraform.bucket_access_key }}"
  spaces_secret_access_key = "{{ warhorse.terraform.bucket_secret_key }}"
}
{% endif %}

{% if (warhorse.providers | default({})).get('linode') %}
provider "linode" {
  token = var.linode_token
}
{% endif %}

{% if (warhorse.providers | default({})).get('cloudflare') %}
provider "cloudflare" {
  api_token = var.cloudflare_token
}
{% endif %}

{% if (warhorse.providers | default({})).get('aws') %}
provider "aws" {
  alias = "aws"
  {% if aws_access_key is defined and aws_secret_key is defined %}
  access_key = "{{ aws_access_key }}"
  secret_key = "{{ aws_secret_key }}"
  {% endif %}
  
  region = "us-east-1"
  skip_requesting_account_id = true
  
  {% if (warhorse.terraform | default({})).get('aws_profile') is defined %}
  profile = "{{ (warhorse.terraform | default({})).get('aws_profile') }}"
  {% endif %}
}
{% endif %}

{% if (warhorse.providers | default({})).get('azure') %}
provider "azurerm" {
  features {
    resource_group {
      prevent_deletion_if_contains_resources = false
    }
  }
  
  {% if (warhorse.terraform | default({})).get('azure_subid') is defined %}
  subscription_id = "{{ (warhorse.terraform | default({})).get('azure_subid') }}"
  {% endif %}
}
{% endif %}
